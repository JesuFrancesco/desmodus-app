name: Flutter CI

on:
  push:
    branches: ["main"]

jobs:
  build-and-release:
    name: Build & Release to Github
    runs-on: macos-latest
    defaults:
      run:
        working-directory: packages/desmodus_app

    steps:
      #1: Clonar repo
      - name: Obtener código fuente
        uses: actions/checkout@v4

        #2: Set up jdk
      - name: Instalar Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "temurin"
          java-version: "17"

        #4: Set up flutter sdk
      - name: Instalar flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

        #5: Obtener dependencias
      - name: Obtener dependencias
        run: flutter pub get

        #6: Configuración de secrets
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/janime.jks

      - name: Crear key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=janime.jks" >> android/key.properties

      - name: Crear .env
        run: |
          echo "AMBIENTE=${{ secrets.AMBIENTE }}" >> .env

          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env

          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "WEBSOCKETS_SERVER_URL=${{ secrets.WEBSOCKETS_SERVER_URL }}" >> .env
          echo "HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}" >> .env

          echo "GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}" >> .env
          echo "GOOGLE_ANDROID_CLIENT_ID=${{ secrets.GOOGLE_ANDROID_CLIENT_ID }}" >> .env

          echo "JAWG_MAPS_ACCESS_TOKEN=${{ secrets.JAWG_MAPS_ACCESS_TOKEN }}" >> .env

        #7 Buildear APK
      - name: Buildear APK
        run: flutter build apk --release --dart-define-from-file=.env

        #8 Buildear App Bundle (aab)
      - name: Buildear appBundle
        run: flutter build appbundle --dart-define-from-file=.env

        #9 Buildear IPA ( IOS Build )
      - name: Buildear IPA (iOS)
        run: flutter build ipa --no-codesign --dart-define-from-file=.env

      - name: Comprimir builds
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

        #10 Upload Artifacts
      - name: Subir artefactos
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            packages/desmodus_app/build/app/outputs/flutter-apk/app-release.apk
            packages/desmodus_app/build/app/outputs/bundle/release/app-release.aab
            packages/desmodus_app/build/ios_build.tar.gz

        #11 Extract Version
      - name: Extraer la version del pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

        #12 Check if Tag Exists
      - name: Verificar si el Tag ya existe
        id: check_tag
        run: |
          git fetch --tags
          TAG_NAME="v${{ env.VERSION }}"
          if [[ $(git tag -l "$TAG_NAME") == "$TAG_NAME" ]]; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

        #13 Modify Tag if it Exists
      - name: Modificar Tag de Github
        if: ${{ env.TAG_EXISTS == 'true' }}
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

        #14 Create Release
      - name: Crear Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "packages/desmodus_app/build/app/outputs/flutter-apk/app-release.apk,packages/desmodus_app/build/app/outputs/bundle/release/app-release.aab,packages/desmodus_app/build/ios_build.tar.gz"
          tag: v${{ env.VERSION }}
          bodyFile: CHANGELOG.md
          makeLatest: true